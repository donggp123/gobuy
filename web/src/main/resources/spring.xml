<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	 http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<context:component-scan base-package="com.cndinuo">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!--配置文件加载到内存-->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

	<!--配置数据库信息-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver.className}" />
		<property name="url" value="${jdbc.url}?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;zeroDateTimeBehavior=convertToNull" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${max.active}" />
		<property name="initialSize" value="${initial.size}" />
		<property name="maxWait" value="${max.wait}" />
		<property name="maxIdle" value="${maxidle}" />
		<property name="minIdle" value="${minidle}" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="${removeAbandoned.timeout}" />
		<property name="connectionProperties" value="clientEncoding=UTF-8" />
		<property name="filters" value="stat" />
	</bean>

	<!--mybatis配置-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		  p:dataSource-ref="dataSource"
		  p:configLocation="classpath:mybatis-config.xml"
		  p:mapperLocations="classpath:mapping/*.xml" />

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		  p:basePackage="com.cndinuo.dao"
		  p:markerInterface="com.cndinuo.base.BaseDao"
		  p:sqlSessionFactoryBeanName="sqlSessionFactory" />

	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		  p:dataSource-ref="dataSource" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut expression="execution(* com.cndinuo.service.*.*(..))" id="services"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="services"/>
	</aop:config>

	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 配置druid监控spring jdbc -->
	<bean id="druid-stat-interceptor"
		  class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		  scope="prototype">
		<property name="patterns">
			<list>
				<value>com.cndinuo.service.*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>

	<import resource="classpath:spring-shiro.xml"/>
	<import resource="classpath:spring-quartz.xml"/>
	<!--<import resource="classpath:spring-redis.xml"/>-->
	<!--<import resource="classpath:kafka-producer.xml"/>-->
	<!--<import resource="classpath:kafka-consumer.xml"/>-->
</beans>