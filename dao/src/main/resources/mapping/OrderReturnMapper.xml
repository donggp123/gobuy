<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "/WEB-INF/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cndinuo.dao.OrderReturnDao">
    <resultMap id="orderReturnMap" type="com.cndinuo.domain.OrderReturn">
        <result property="id" column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="mberId" column="mber_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="mrhtId" column="mrht_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="retNo" column="ret_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="orderNo" column="order_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="retPrice" column="ret_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
        <result property="actualAmount" column="actual_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
        <result property="retStatus" column="ret_status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
        <result property="settleStatus" column="settle_status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
        <result property="retNum" column="ret_num" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="retReason" column="ret_reason" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="retTime" column="ret_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="retType" column="ret_type" javaType="java.lang.Byte" jdbcType="TINYINT"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="cols">
		id,
		mber_id,
		mrht_id,
		ret_no,
		order_no,
		ret_price,
		actual_amount,
		ret_status,
		settle_status,
		ret_num,
		ret_reason,
		ret_time,
		ret_type,
		remark
	</sql>

    <select id="getLastReturnNo" resultType="java.lang.Integer">
		select id from order_return order by id desc limit 1
	</select>

    <select id="getById" resultMap="orderReturnMap" parameterType="java.lang.Integer">
		select <include refid="cols"/> from order_return  orderReturn
		 where id = #{id}
	</select>
    <select id="getByMap" resultMap="orderReturnMap" parameterType="java.util.Map">
		SELECT <include refid="cols"/> from order_return
		<where>
			<if test="orderNo != null and orderNo != ''">
				and order_no = #{orderNo}
			</if>
			<if test="retNo != null and retNo != ''">
				and ret_no = #{retNo}
			</if>
			<if test="retStatus != null">
				and ret_status = #{retStatus}
			</if>
			<if test="settleStatus != null">
				and settle_status = #{settleStatus}
			</if>
			<if test="mrhtId != null">
				and mrht_id = #{mrhtId}
			</if>
			<if test="settleCycle != null">
				and TO_DAYS(NOW()) - TO_DAYS(ret_time) >= #{settleCycle}
			</if>
		</where>
		<!-- 添加查询条件属性 -->
	</select>
    <select id="getByEntity" resultMap="orderReturnMap" parameterType="com.cndinuo.domain.OrderReturn">
		select <include refid="cols"/> from order_return  orderReturn
		<!-- 添加查询条件属性 -->
	</select>
    <select id="getByPage" resultMap="orderReturnMap" parameterType="com.cndinuo.page.Page">
		select
			orr.id,
			orr.mber_id,
			mi.nick_name as nickName,
			m.mrht_name as mrhtName,
			orr.ret_no,
			orr.order_no,
			orr.ret_price,
			orr.actual_amount,
			orr.ret_status,
			orr.ret_num,
			(select group_concat(name) from sys_dict s where `table` = 'order_return' and find_in_set(s.value,orr.ret_reason)) as ret_reason,
			orr.ret_time,
			orr.ret_type,
			orr.remark
		from
			order_return  orr,
			mber_info mi,
			`order` o,
			merchant m
		where
			orr.order_no = o.order_no
			and o.mrht_id = m.id
			and mi.mber_id = o.mber_id
			and m.id = o.mrht_id
			and m.id = #{p.mrhtId}
		<!-- 添加查询条件属性 -->
	</select>
    <select id="getCount" resultType="java.lang.Integer">
		select count(1) from order_return  orderReturn
	</select>
    <select id="getCountByMap" resultType="java.lang.Integer">
		select count(1) from order_return  orderReturn
		<if test="whereSql != null and whereSql != ''" >
			<![CDATA[${whereSql}]]>
		</if>
		<!-- 添加查询条件属性 -->
	</select>
    <select id="getCountByEntity" resultType="java.lang.Integer">
		select count(1) from order_return  orderReturn
		<!--添加if语句添加过滤条件-->
	</select>

	<select id="getRefundByMberId" resultMap="orderReturnMap" parameterType="com.cndinuo.page.Page">
		SELECT
			orr.order_no,
            orr.ret_price,
            orr.ret_num,
            orr.ret_time,
			orr.actual_amount,
			orr.ret_status,
			o.mrht_id AS mrhtId,
			o.mrht_name AS mrhtName,
            (select group_concat(name) from sys_dict s where `table` = 'order_return' and find_in_set(s.value,orr.ret_reason)) as ret_reason
		FROM
			order_return orr, `order` o
		WHERE
			orr.mber_id = #{p.mberId}
		AND orr.order_no = o.order_no
		ORDER BY orr.ret_time DESC
	</select>

    <insert id="insert" parameterType="com.cndinuo.domain.OrderReturn" useGeneratedKeys="true" keyProperty="id">
		insert into order_return
		<trim prefix="(" suffix=")" suffixOverrides="," > 
			<if test=" mberId != null and mberId != ''">
				mber_id,
			</if>
			<if test=" mrhtId != null and mrhtId != ''">
				mrht_id,
			</if>
			<if test=" retNo != null and retNo != ''">
				ret_no,
			</if>
			<if test=" orderNo != null and orderNo != ''">
				order_no,
			</if>
			<if test=" retPrice != null and retPrice != ''">
				ret_price,
			</if>
			<if test=" actualAmount != null and actualAmount != ''">
				actual_amount,
			</if>
			<if test=" retStatus != null and retStatus != ''">
				ret_status,
			</if>
			<if test=" settleStatus != null and settleStatus != ''">
                settle_status,
			</if>
			<if test=" retNum != null and retNum != ''">
				ret_num,
			</if>
			<if test=" retReason != null and retReason != ''">
				ret_reason,
			</if>
			<if test=" retTime != null and retTime != ''">
				ret_time,
			</if>
			<if test=" retType != null and retType != ''">
				ret_type,
			</if>
			<if test=" remark != null and remark != ''">
				remark
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test=" mberId != null and mberId != ''">
				#{mberId,jdbcType=INTEGER},
			</if>
			<if test=" mrhtId != null and mrhtId != ''">
				#{mrhtId,jdbcType=INTEGER},
			</if>
			<if test=" retNo != null and retNo != ''">
				#{retNo,jdbcType=VARCHAR},
			</if>
			<if test=" orderNo != null and orderNo != ''">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test=" retPrice != null and retPrice != ''">
				#{retPrice,jdbcType=DECIMAL},
			</if>
			<if test=" actualAmount != null and actualAmount != ''">
				#{actualAmount,jdbcType=DECIMAL},
			</if>
			<if test=" retStatus != null and retStatus != ''">
				#{retStatus,jdbcType=TINYINT},
			</if>
			<if test=" settleStatus != null and settleStatus != ''">
				#{settleStatus,jdbcType=TINYINT},
			</if>
			<if test=" retNum != null and retNum != ''">
				#{retNum,jdbcType=INTEGER},
			</if>
			<if test=" retReason != null and retReason != ''">
				#{retReason,jdbcType=VARCHAR},
			</if>
			<if test=" retTime != null and retTime != ''">
				#{retTime,jdbcType=TIMESTAMP},
			</if>
			<if test=" retType != null and retType != ''">
				#{retType,jdbcType=TINYINT},
			</if>
			<if test=" remark != null and remark != ''">
				#{remark,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
    <update id="updateById" parameterType="com.cndinuo.domain.OrderReturn">
		update order_return orderReturn
		<set>
			<if test=" mberId != null and mberId != ''">
				mber_id = #{mberId,jdbcType=INTEGER},
			</if>
			<if test=" mrhtId != null and mrhtId != ''">
				mrht_id = #{mrhtId,jdbcType=INTEGER},
			</if>
			<if test=" retNo != null and retNo != ''">
				ret_no = #{retNo,jdbcType=VARCHAR},
			</if>
			<if test=" orderNo != null and orderNo != ''">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test=" retPrice != null and retPrice != ''">
				ret_price = #{retPrice,jdbcType=DECIMAL},
			</if>
			<if test=" actualAmount != null and actualAmount != ''">
				actual_amount = #{actualAmount,jdbcType=DECIMAL},
			</if>
			<if test=" retStatus != null and retStatus != ''">
				ret_status = #{retStatus,jdbcType=TINYINT},
			</if>
			<if test=" settleStatus != null and settleStatus != ''">
                settle_status = #{settleStatus,jdbcType=TINYINT},
			</if>
			<if test=" retNum != null and retNum != ''">
				ret_num = #{retNum,jdbcType=INTEGER},
			</if>
			<if test=" retReason != null and retReason != ''">
				ret_reason = #{retReason,jdbcType=VARCHAR},
			</if>
			<if test=" retTime != null and retTime != ''">
				ret_time = #{retTime,jdbcType=TIMESTAMP},
			</if>
			<if test=" retType != null and retType != ''">
				ret_type = #{retType,jdbcType=TINYINT},
			</if>
			<if test=" remark != null and remark != ''">
				remark = #{remark,jdbcType=VARCHAR}
			</if>
		</set>
		 where id= #{id} 
	</update>
    <update id="updateByMap" parameterType="java.util.Map">
		update order_return  orderReturn
        <set>
            <if test="retStaus != null">
                ret_status = #{retStatus},
            </if>
            <if test="settleStatus != null">
                settle_status = #{settleStatus},
            </if>
            <if test="remark != null">
                remark = #{remark}
            </if>
        </set>
		<where>
            <if test="orderNo != null and orderNo != ''">
		        and order_no = #{orderNo}
            </if>
            <if test="retNo != null and retNo != ''">
		        and ret_no = #{retNo}
            </if>
        </where>
		<!-- 添加查询条件属性 -->
	</update>
    <update id="deleteById" parameterType="java.lang.Integer">
		update order_return orderReturn set deleted=1
		where id=#{id}
	</update>
    <update id="deleteByMap" parameterType="java.util.Map">
		update order_return orderReturn set deleted=1 
		<if test="whereSql != null and whereSql != ''" >
			<![CDATA[${whereSql}]]>
		</if>
		<!-- 添加条件属性 -->
	</update>
    <update id="deleteByEntity" parameterType="com.cndinuo.domain.OrderReturn">
		update order_return orderReturn set deleted=1 
		where id=#{id}
	</update>
</mapper>
